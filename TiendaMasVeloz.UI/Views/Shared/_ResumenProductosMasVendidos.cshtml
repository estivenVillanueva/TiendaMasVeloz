@model IEnumerable<TiendaMasVeloz.BLL.DTOs.DetalleFacturaDTO>

@{
    var productosAgrupados = Model
        .GroupBy(d => new { d.IdProducto, d.NombreProducto, d.PrecioUnitario })
        .Select(g => new {
            Id = g.Key.IdProducto,
            Nombre = g.Key.NombreProducto,
            Precio = g.Key.PrecioUnitario,
            CantidadVendida = g.Sum(d => d.Cantidad),
            TotalVentas = g.Sum(d => d.Subtotal)
        })
        .OrderByDescending(p => p.CantidadVendida)
        .Take(5);
}

<div class="card mb-4">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <i class="fas fa-box me-1"></i>
                Productos MÃ¡s Vendidos
            </div>
            <div>
                <button type="button" class="btn btn-sm btn-outline-primary" onclick="toggleView('productos')">
                    <i class="fas fa-chart-pie me-1"></i>
                    Cambiar Vista
                </button>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div id="productosTabla">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Producto</th>
                            <th>Precio</th>
                            <th>Cantidad Vendida</th>
                            <th>Total Ventas</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var producto in productosAgrupados)
                        {
                            <tr>
                                <td>@producto.Nombre</td>
                                <td>@producto.Precio.ToString("C")</td>
                                <td>@producto.CantidadVendida</td>
                                <td>@producto.TotalVentas.ToString("C")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div id="productosGrafico" style="display: none;">
            <canvas id="graficoProductos"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleView(tipo) {
            const tabla = document.getElementById(tipo + 'Tabla');
            const grafico = document.getElementById(tipo + 'Grafico');
            
            if (tabla.style.display === 'none') {
                tabla.style.display = 'block';
                grafico.style.display = 'none';
            } else {
                tabla.style.display = 'none';
                grafico.style.display = 'block';
                
                if (tipo === 'productos') {
                    const ctx = document.getElementById('graficoProductos').getContext('2d');
                    new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: @Html.Raw(Json.Serialize(productosAgrupados.Select(p => p.Nombre))),
                            datasets: [{
                                label: 'Cantidad Vendida',
                                data: @Html.Raw(Json.Serialize(productosAgrupados.Select(p => p.CantidadVendida))),
                                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
            }
        }
    </script>
} 